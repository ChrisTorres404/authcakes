import { TenantMembership } from '../../tenants/entities/tenant-membership.entity';
import { Session } from '../../auth/entities/session.entity';
import { RefreshToken } from '../../auth/entities/refresh-token.entity';
import { ApiKey } from '../../api/entities/api-key.entity';
import { UserDevice } from '../../auth/entities/user-device.entity';
import { MfaRecoveryCode } from '../../auth/entities/mfa-recovery-code.entity';
import { WebauthnCredential } from '../../auth/entities/webauthn-credential.entity';
import { PasswordHistory } from '../../auth/entities/password-history.entity';
import { Log } from '../../logs/entities/log.entity';
export declare class User {
    id: string;
    email: string;
    password: string;
    role: string;
    active: boolean;
    firstName: string;
    lastName: string;
    avatar: string;
    emailVerified: boolean;
    phoneNumber: string;
    phoneVerified: boolean;
    emailVerificationToken: string | null;
    phoneVerificationToken: string;
    resetToken: string | null;
    resetTokenExpiry: Date | null;
    otp: string | null;
    otpExpiry: Date | null;
    accountRecoveryToken: string | null;
    accountRecoveryTokenExpiry: Date | null;
    failedLoginAttempts: number;
    lockedUntil: Date | null;
    lastLogin: Date;
    company: string;
    department: string;
    country: string;
    state: string;
    address: string;
    address2: string;
    city: string;
    zipCode: string;
    bio: string;
    mfaEnabled: boolean;
    mfaSecret: string;
    mfaType: string;
    tenantMemberships: TenantMembership[];
    sessions: Session[];
    refreshTokens: RefreshToken[];
    apiKeys: ApiKey[];
    devices: UserDevice[];
    mfaRecoveryCodes: MfaRecoveryCode[];
    webauthnCredentials: WebauthnCredential[];
    passwordHistory: PasswordHistory[];
    logs: Log[];
    createdAt: Date;
    updatedAt: Date;
}
